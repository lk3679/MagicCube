@model EG_MagicCube.Models.WorksModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Works", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>WorksModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            作品基本資訊
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.WorksAuthors, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AuthorsNo", (IEnumerable<SelectListItem>)ViewBag.WorksAuthors, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                    @Html.ValidationMessageFor(model => model.WorksAuthors, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.WorksName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WorksName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorksName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.YearStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.YearStart, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                @Html.ValidationMessageFor(model => model.YearStart, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.YearEnd, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                @Html.ValidationMessageFor(model => model.YearEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            材質大小及數量
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="MaterialsID">材質</label>
            <div class="col-md-10">
                @Html.DropDownList("MaterialsID", (IEnumerable<SelectListItem>)ViewBag.WorksModuleList, new { @class = "js-example-basic-multiple js-states form-control" })
                <span class="field-validation-valid text-danger" data-valmsg-for="MaterialsID" data-valmsg-replace="true"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="height">高</label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" data-val="true" data-val-number="The field 高 must be a number." data-val-required="高 欄位是必要項。"
                       id="height" name="height" type="number" value="">
                <span class="field-validation-valid text-danger" data-valmsg-for="height" data-valmsg-replace="true"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="width">寬</label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" data-val="true" data-val-number="The field 寬 must be a number." data-val-required="寬 欄位是必要項。"
                       id="width" name="width" type="number" value="">
                <span class="field-validation-valid text-danger" data-valmsg-for="width" data-valmsg-replace="true"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="deep">深</label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" data-val="true" data-val-number="The field 深 must be a number." data-val-required="深 欄位是必要項。"
                       id="deep" name="deep" type="number" value="">
                <span class="field-validation-valid text-danger" data-valmsg-for="deep" data-valmsg-replace="true"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="times">影片長度</label>
            <div class="col-md-10">
                <input class="form-control text-box single-line"
                       id="times" name="times" type="number" value="">
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="nums">數量單位</label>
            <div class="col-md-4">
                <input class="form-control text-box single-line"
                       id="nums" name="nums" type="number" value="" data-val="true" data-val-number="The field 數量 must be a number." data-val-required="數量 欄位是必要項。">
                <span class="field-validation-valid text-danger" data-valmsg-for="nums" data-valmsg-replace="true"></span>
            </div>
            <div class="col-md-4">
                @Html.DropDownList("CountNoun", (IEnumerable<SelectListItem>)ViewBag.WorksCountNounList, new { @class = "js-example-basic-multiple js-states form-control" })
                <span class="field-validation-valid text-danger" data-valmsg-for="CountNoun" data-valmsg-replace="true"></span>
            </div>
            <div class="col-md-2">
                <input type="button" id="mateadd" name="mateadd" class="btn btn-default" value="Add" />
            </div>
        </div>
        <div class="form-group">
            <table class="Moduletable table" name="WorksModuleList">
                <thead>
                    <tr>
                        <th hidden="hidden">
                            材質編號
                        </th>
                        <th>
                            材質
                        </th>
                        <th>
                            高
                        </th>
                        <th>
                            寬
                        </th>
                        <th>
                            深
                        </th>
                        <th>
                            影片長度
                        </th>
                        <th hidden="hidden">
                            單位編號
                        </th>
                        <th>
                            單位數量
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.WorksModuleList != null)
                    {
                        foreach (var item in Model.WorksModuleList)
                        {
                            <tr>
                                <td hidden="hidden">
                                    @Html.DisplayFor(modelItem => item.Material.MenuID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Material.MenuName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Height)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Width)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Deep)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TimeLength)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Amount) @Html.DisplayFor(modelItem => item.CountNoun.MenuName)
                                </td>
                            </tr>
                        }
                    }

                </tbody>

            </table>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", rows = 5 } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorksPropOwnerList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GenreNoList", (IEnumerable<SelectListItem>)ViewBag.WorksPropOwnerList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.WorksPropOwnerList, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorksPropWareTypeList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GenreNoList", (IEnumerable<SelectListItem>)ViewBag.WorksPropWareTypeList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.WorksPropWareTypeList, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PricingDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PricingDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.PricingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GrossMargin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GrossMargin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GrossMargin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorksPropGenreList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GenreNoList", (IEnumerable<SelectListItem>)ViewBag.WorksPropGenreList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.WorksPropGenreList, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorksPropStyleList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StyleNoList", (IEnumerable<SelectListItem>)ViewBag.WorksPropStyleList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.WorksPropStyleList, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Marketability, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Marketability, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Marketability, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Packageability, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Packageability, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Packageability, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valuability, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valuability, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valuability, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Artisticability, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Artisticability, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Artisticability, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.UploadWorksFiles, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="Img" multiple accept="image/*" />
                @*<img id="imgPreview" style="max-width: 150px;" />*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(".js-example-basic-multiple").select2();
        $('#mateadd').click(function () {
            var index = $('.Moduletable tr').length - 1;
            $('.Moduletable tr:last').after('<tr>< td hidden= "hidden" > <input type="hidden" name="WorksModuleList[' + index +'].Material.MenuID" value="' + $('#MaterialsID').val() + '"></input></td>' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Material.MenuName" value="' + $('#select2-MaterialsID-container').html() + '"></input>' + $('#select2-MaterialsID-container').html() + '</td>' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Height" value="' + $('#height').val() + '"></input>' + $('#height').val() + '</td>' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Width" value="' + $('#width').val() + '"></input>' + $('#width').val() + '</td > ' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Deep" value="' + $('#deep').val() + '"></input>' + $('#deep').val() + '</td > ' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].TimeLength" value="' + $('#times').val() + '"></input>' + $('#times').val() + '</td > ' +
                '<td hidden= "hidden" > <input type="hidden" name="WorksModuleList[' + index + '].CountNoun.MenuID" value="' + $('#CountNoun').val() + '"></input>' + $('#CountNoun').val() + '</td>'+
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Amount" value="' + $('#nums').val() + '"></input>' +
                '<input type="hidden" name="WorksModuleList[' + index + '].CountNoun.MenuName" value="' + $('#select2-CountNoun-container').html() + '"></input>' +
                $('#nums').val() + $('#select2-CountNoun-container').html() + '</td></tr >');

        });
    </script>
}
