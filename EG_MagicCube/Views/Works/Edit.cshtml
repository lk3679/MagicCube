@model EG_MagicCube.Models.WorksModel

@{
    ViewBag.Title = "作品編輯";
}

<h2>作品編輯</h2>

<div class="col-xs-12">
    @Html.ActionLink("編輯圖片 ("+ Model.ImageCount.ToString() + ")", "Edit", "Files", new { id = Model.WorksNo }, new { @class = "btn btn-info" })
    @Html.ActionLink("返回作品列表", "Index", "Works", new { @class = "btn btn-warning pull-right" })
</div>

@using (Html.BeginForm("Edit", "Works", FormMethod.Post, new { enctype = "multipart/form-data", id = "EditForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="nonpadding">
            <div class="col-xs-12">
                作品基本資訊
            </div>
            @Html.HiddenFor(model=>model.MaterialsID)

            @Html.LabelFor(model => model.AuthorsName, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.Hidden("AuthorNo_InputStringHide", string.Join(",", string.Join(",", Model.AuthorNo_InputString ?? new List<string>())))
                @Html.DropDownList("AuthorNo_InputString", (IEnumerable<SelectListItem>)ViewBag.WorksAuthors, new { @class = "js-example-basic-multiple js-states form-control" })
                @Html.ValidationMessageFor(model => model.AuthorNo_InputString, "", new { @class = "text-danger" })
            </div>
          
            @Html.LabelFor(model => model.AuthorsEnName, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.EditorFor(model => model.AuthorsEnName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @Html.LabelFor(model => model.AuthorsNation, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.EditorFor(model => model.AuthorsNation, new { htmlAttributes = new { @class = "form-control" } })

            </div>


            @Html.LabelFor(model => model.WorksName, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.EditorFor(model => model.WorksName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorksName, "", new { @class = "text-danger" })
            </div>

            
           
            <div class="col-md-12 col-sm-12 col-xs-12">
                @Html.LabelFor(model => model.YearStart, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                <div class="col-md-3 col-xs-9">
                    <div class="col-xs-6">
                        @Html.EditorFor(model => model.YearStart, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        @Html.ValidationMessageFor(model => model.YearStart, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-xs-6">
                        @Html.EditorFor(model => model.YearEnd, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        @Html.ValidationMessageFor(model => model.YearEnd, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.LabelFor(model => model.Material, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                <div class="col-md-3 col-xs-9">
                    @Html.EditorFor(model => model.Material, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.MaterialEng, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                <div class="col-md-3 col-xs-9">
                    @Html.EditorFor(model => model.MaterialEng, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaterialEng, "", new { @class = "text-danger" })
                </div>

            </div>         
                    <div class="col-md-12 col-sm-12 col-xs-12">

                        @Html.LabelFor(model => model.WorkSize, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                        <div class="col-md-3 col-xs-9">
                            @Html.EditorFor(model => model.WorkSize, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WorkSize, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.ZFVOLUME, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                        <div class="col-md-3 col-xs-9">
                            @Html.EditorFor(model => model.ZFVOLUME, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ZFVOLUME, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.AuthorsPropTag, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                        <div class="col-md-3 col-xs-9">
                            @Html.Hidden("AuthorsTagNo_InputStringHide", string.Join(",", string.Join(",", Model.AuthorsTagNo_InputString)))
                            @Html.DropDownList("AuthorsTagNo_InputString", (IEnumerable<SelectListItem>)ViewBag.AuthorTagList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                        </div>

                    </div>                        

                <div class="col-md-12 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.GenreName, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                    <div class="col-md-3 col-xs-9">
                        <label class="col-md-6 col-xs-6" style="text-align:center;">@Model.GenreName</label>
                        @*@Html.EditorFor(model => model.GenreName, new { htmlAttributes = new { @class = "form-control" } })*@
                    </div>

                    @Html.LabelFor(model => model.WorksSizeNo_InputString, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                    <div class="col-md-3 col-xs-9">
                        @Html.Hidden("WorksSizeNo_InputStringHide", string.Join(",", string.Join(",", Model.WorksSizeNo_InputString ?? new List<string>())))
                        @Html.DropDownList("WorksSizeNo_InputString", (IEnumerable<SelectListItem>)ViewBag.WorksSizeList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.WorksSizeNo_InputString, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.StyleNo_InputString, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                    <div class="col-md-3 col-xs-9">
                        @Html.Hidden("StyleNo_InputStringHide", string.Join(",", string.Join(",", Model.StyleNo_InputString ?? new List<string>())))
                        @Html.DropDownList("StyleNo_InputString", (IEnumerable<SelectListItem>)ViewBag.WorksPropStyleList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                        @*@Html.ValidationMessageFor(model => model.StyleNo_InputString, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="col-md-12 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.OwnerNo_InputString, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                    <div class="col-md-3 col-xs-9">
                        @Html.Hidden("OwnerNo_InputStringHide", string.Join(",", string.Join(",", Model.OwnerNo_InputString ?? new List<string>())))
                        @Html.DropDownList("OwnerNo_InputString", (IEnumerable<SelectListItem>)ViewBag.WorksPropOwnerList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.OwnerNo_InputString, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.WareTypeNo_InputString, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                    <div class="col-md-3 col-xs-9">
                        @Html.Hidden("WareTypeNo_InputStringHide", string.Join(",", string.Join(",", Model.WareTypeNo_InputString ?? new List<string>())))
                        @Html.DropDownList("WareTypeNo_InputString", (IEnumerable<SelectListItem>)ViewBag.WorksPropWareTypeList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.WareTypeNo_InputString, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.TotalInventory, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                    <div class="col-md-3 col-xs-9">
                        @*@Html.EditorFor(model => model.TotalInventory, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalInventory, "", new { @class = "text-danger" })*@
                        <label class="col-md-1 col-xs-6" style="text-align:center;">@Model.TotalInventory</label>
                    </div>
                    </div>

            <div class="col-md-12 col-sm-12 col-xs-12">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                <div class="col-md-3 col-xs-9">
                    @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", rows = 1 })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-12 col-sm-12 col-xs-12">

                @Html.LabelFor(model => model.Marketability, htmlAttributes: new { @class = "control-label col-md-1 col-xs-6" })
                <div class="col-md-1 col-xs-6">
                    @Html.EditorFor(model => model.Marketability, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Marketability, "", new { @class = "text-danger", @min = "0", @max = "10", @data_toggle = "tooltip", @data_html = "true", @title = "" })
                </div>
                @Html.LabelFor(model => model.Valuability, htmlAttributes: new { @class = "control-label col-md-1 col-xs-6" })
                <div class="col-md-1 col-xs-6">
                    @Html.EditorFor(model => model.Valuability, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Valuability, "", new { @class = "text-danger", @min = "0", @max = "10", @data_toggle = "tooltip", @data_html = "true", @title = "" })
                </div>

                @Html.LabelFor(model => model.Artisticability, htmlAttributes: new { @class = "control-label col-md-1 col-xs-6" })
                <div class="col-md-1 col-xs-6">
                    @Html.EditorFor(model => model.Artisticability, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Artisticability, "", new { @class = "text-danger", @min = "0", @max = "10", @data_toggle = "tooltip", @data_html = "true", @title = "" })
                </div>

                @Html.LabelFor(model => model.AuthorsRating, htmlAttributes: new { @class = "control-label col-md-1 col-xs-6" })
                <label class="col-md-1 col-xs-6" id="AuthorsRating" style="text-align:center;">@Model.AuthorsRating</label>

                @Html.LabelFor(model => model.Packageability, htmlAttributes: new { @class = "control-label col-md-1 col-xs-6" })
                <div class="col-md-1 col-xs-6">
                    @Html.EditorFor(model => model.Packageability, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Packageability, "", new { @class = "text-danger", @min = "0", @max = "10", @data_toggle = "tooltip", @data_html = "true", @title = "" })
                </div>
                @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-1 col-xs-6" })
                <label class="col-md-1 col-xs-6" id="WorkRating" style="text-align:center;">@Model.Rating</label>
            </div>

                <div class="col-md-12 col-sm-12 col-xs-12">

                    @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-1 col-xs-2" })
                    <div class="col-md-1 col-xs-6">
                        <label class="col-md-1 col-xs-6" style="text-align:center;">@Model.Cost</label>
                    </div>
                    <div class="col-md-1 col-xs-6">
                        <input type="hidden" id="Price" value="@Model.Price " />
                    </div>
                       
            <div class="col-md-1 col-xs-6">
                <input type="hidden" id="Cost" value="@Model.Cost " />
            </div>
                @Html.LabelFor(model => model.GrossMargin, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
                <label class="col-md-1 col-xs-6" id="GrossMargin" style="text-align:center;">@Model.GrossMargin</label>
            </div>

                @foreach (var WorksPrices in Model.WorksPricesList)
                {
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <label class="control-label col-md-1 col-xs-1">幣別</label>
                        <label class="col-md-1 col-xs-6" style="text-align:center;">@WorksPrices.Currency</label>
                        <label class="control-label col-md-1 col-xs-2">定價</label>
                        <label class="col-md-1 col-xs-6" style="text-align:center;">@WorksPrices.Price</label>
                        <label class="control-label col-md-1 col-xs-3">定價時間</label>
                        <label class="col-md-3 col-xs-6" style="text-align:center;">@WorksPrices.PricingDate</label>
                    </div>
                }



              
                <div class="col-md-9 col-sm-12 col-xs-12">

                    <a href="@Url.Action("Edit", "Files", new { id = Model.WorksNo})" class="col-md-2 col-xs-5">作品圖片 (@Model.ImageCount.ToString())</a>
                    <div class="col-md-2 col-sm-6 col-xs-3">
                        <span class="btn btn-success fileinput-button">
                            <i class="glyphicon glyphicon-plus"></i>
                            <span id="filespan">上傳...</span>
                            <input type="file" name="Img" multiple accept="image/*" />
                            @*<img id="imgPreview" style="max-width: 150px;" />*@
                        </span>
                    </div>
                    <div class="col-md-1 col-xs-6 pull-right text-right">
                        <input type="submit" value="儲存" class="btn btn-primary" />
                    </div>
                </div>


            </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/numberprice.js")"></script>
    <script>
       

        $.when($(".js-example-basic-multiple").select2({ width: '100%' })).then(function () {


            //作品尺幅選單
            if ($('#WorksSizeNo_InputStringHide').val()) {
                var oWorkSizeNo = $('#WorksSizeNo_InputStringHide').val().split(',');
                for (var i = 0; i < oWorkSizeNo.length; i++) {
                    $('#WorksSizeNo_InputString  option[value="' + oWorkSizeNo[i] + '"]').attr('selected', 'selected');
                }
                $("#WorksSizeNo_InputString").trigger("change");
            }
            
            var oAuthorNo = $('#AuthorNo_InputStringHide').val().split(',');
            for (var i = 0; i < oAuthorNo.length; i++) {
                $('#AuthorNo_InputString  option[value="' + oAuthorNo[i] + '"]').attr('selected', 'selected');
            }
            $("#AuthorNo_InputString").trigger("change");


            var oAuthorsTagNo = $("#AuthorsTagNo_InputStringHide").val().split(',');
            for (var i = 0; i < oAuthorsTagNo.length; i++) {
                $('#AuthorsTagNo_InputString  option[value="' + oAuthorsTagNo[i] + '"]').attr('selected', 'selected');
            }
            $("#AuthorsTagNo_InputString").trigger("change");
            $("#AuthorsTagNo_InputString").prop("disabled", true);

            var oOwnerNo = $('#OwnerNo_InputStringHide').val().split(',');
            for (var i = 0; i < oOwnerNo.length; i++) {
                $('#OwnerNo_InputString  option[value="' + oOwnerNo[i] + '"]').attr('selected', 'selected');
            }
            $("#OwnerNo_InputString").trigger("change");
            $("#OwnerNo_InputString").prop("disabled", true);

            var oWareTypeNo = $('#WareTypeNo_InputStringHide').val().split(',');
            for (var i = 0; i < oWareTypeNo.length; i++) {
                $('#WareTypeNo_InputString  option[value="' + oWareTypeNo[i] + '"]').attr('selected', 'selected');
            }
            $("#WareTypeNo_InputString").trigger("change");
            $("#WareTypeNo_InputString").prop("disabled", true);
            //var oGenreNo = $('#GenreNo_InputStringHide').val().split(',');
            //for (var i = 0; i < oGenreNo.length; i++) {
            //    $('#GenreNo_InputString  option[value="' + oGenreNo[i] + '"]').attr('selected', 'selected');
            //}
            //$("#GenreNo_InputString").trigger("change");

            var oStyleNo = $('#StyleNo_InputStringHide').val().split(',');
            for (var i = 0; i < oStyleNo.length; i++) {
                $('#StyleNo_InputString  option[value="' + oStyleNo[i] + '"]').attr('selected', 'selected');
            }
            $("#StyleNo_InputString").trigger("change");
           
        });

        function CheckData() {
            var obj = {};
            if ($('input#height').val() == "") {
                obj["height"] = "此項目必填";
            }
            if ($('input#width').val() == "") {
                obj["width"] = "此項目必填";
            }
            if ($('input#deep').val() == "") {
                obj["deep"] = "此項目必填";
            }
            //if ($('input#length').val() == "") {
            //    obj["length"] = "此項目必填";
            //}
            if ($('input#nums').val() == "") {
                obj["nums"] = "此項目必填";
            }
            if (!jQuery.isEmptyObject(obj)) {
                $("#EditForm").validate().showErrors(obj)
                return true;
            }
            return false;
        }

        $('#mateadd').click(function () {
            if (CheckData()) {
                
                return;
            }
            $('label.error:visible').hide();
            var index = $('.Moduletable tr').length - 1;
            $('.Moduletable tr:last').after('<tr>< td hidden= "hidden" > <input type="hidden" name="WorksModuleList[' + index + '].Material.MenuID" value="' + $('#MaterialsID').val() + '"></input></td>' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Material.MenuName" value="' + $('#select2-MaterialsID-container').html() + '"></input>' + $('#select2-MaterialsID-container').html() + '</td>' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Height" value="' + $('#height').val() + '"></input>' + $('#height').val() + '</td>' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Width" value="' + $('#width').val() + '"></input>' + $('#width').val() + '</td > ' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Deep" value="' + $('#deep').val() + '"></input>' + $('#deep').val() + '</td > ' +
                //'<td><input type="hidden" name="WorksModuleList[' + index + '].Length" value="' + $('#length').val() + '"></input>' + $('#length').val() + '</td > ' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].TimeLength" value="' + $('#times').val() + '"></input>' + $('#times').val() + '</td > ' +
                '<td hidden= "hidden" > <input type="hidden" name="WorksModuleList[' + index + '].CountNoun.MenuID" value="' + $('#CountNoun').val() + '"></input>' + $('#CountNoun').val() + '</td>' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Amount" value="' + $('#nums').val() + '"></input>' +
                '<input type="hidden" name="WorksModuleList[' + index + '].CountNoun.MenuName" value="' + $('#select2-CountNoun-container').html() + '"></input>' +
                $('#nums').val() + $('#select2-CountNoun-container').html() + '</td> <td><i class="fa fa-times fa-4" aria-hidden="true"></i></td></tr >');

        });
        $(document).on('click', 'i.fa', function () {
            var p = $(this).parent().parent();
            $(p).hide();
            $(p).find('input').attr('value', '-1');
        }).on('change', 'input#YearStart', function () {
            var s = +$('input#YearStart').val();
            if (s != "") {
                var e = +$('input#YearEnd').val();
                if (e == "" || s >= e) {
                    $('input#YearEnd').val(s);
                }
            }
        });
        $("form").submit(function (e) {
            $('label.error').hide();
            if ($('#WorksModuleList tr:visible').length == 1) {
                $('label.error').show();
                $("#loadingeffect").hide();
                return false;
            }

        });
        $('input[type=file]').change(function () {
            var l = this.files.length;
            if (l > 0) { $('span#filespan').html("已選 " + l + " 個檔案"); }
            else { $('span#filespan').html("上傳..."); }
        });
        $("#Marketability,#Packageability,#Valuability,#Artisticability").change(function () {
            var m = 0.0;
            var p = 0.0;
            var v = 0.0;
            var a = 0.0;
            m = (isNaN($("#Marketability").val())) == true ? 0.0 :parseFloat($("#Marketability").val())*0.3;
            p = (isNaN($("#Packageability").val())) == true ? 0.0 :parseFloat($("#Packageability").val())*0.1;
            v = (isNaN($("#Valuability").val())) == true ? 0.0 :parseFloat($("#Valuability").val()) * 0.25;
            a = (isNaN($("#Artisticability").val())) == true ? 0.0 :parseFloat($("#Artisticability").val()) * 0.2;
            var r = (m + p + v + a) / 2.0;
            var r2 = (m + p + v + a) % 2.0;
            if (r2 > 0.0)
            {
                r = r + 1;
            } 
            if (!isNaN(r)) {
                $("#WorkRating").text(parseInt((isNaN(r)) == true ? 0 : (parseInt(r))).toString());
            }
            
        });
        $("#Price,#Cost").change(function () {
            var p = 0.0;
            var c = 0.0;
            var g = 0.0;
            p = (isNaN($("#Price").val())) == true ? 0.0 : parseFloat($("#Price").val());
            c = (isNaN($("#Cost").val())) == true ? 0.0 : parseFloat($("#Cost").val());
            g = (((p / 1.05) - c) / (p / 1.05)) * 100;
            if (!isNaN(g))
            {
                $("#GrossMargin").text(g.toFixed(3).toString() + "%");
            }
        });

        $('form').on('focus', 'input[type=number]', function (e) {
            $(this).on('mousewheel.disableScroll', function (e) {
                e.preventDefault()
            })
        })
        $('form').on('blur', 'input[type=number]', function (e) {
            $(this).off('mousewheel.disableScroll')
        })
        //var tooltiptemplate ='<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner" style="background-color:white;color:black;border: 1px solid #ccc;border-radius: 4px;background-color: #f5f5f5;"></div></div>'
        //$(document).ready(function () {
        //    $('#Marketability').tooltip({ 'trigger': 'focus hover', html: true, template: tooltiptemplate, 'title': '作品等級=<font color="red">市場性(30%)</font>+包裹性(10%)+藝術性(20%)+增值性(25%)+作者作品數量分級(15%)' });
        //    $('#Packageability').tooltip({ 'trigger': 'focus hover', html: true, template: tooltiptemplate, 'title': '作品等級=市場性(30%)+<font color="red">包裹性(10%)</font>+藝術性(20%)+增值性(25%)+作者作品數量分級(15%)' });
        //    $('#Artisticability').tooltip({ 'trigger': 'focus hover', html: true, template: tooltiptemplate, 'title': '作品等級=市場性(30%)+包裹性(10%)+<font color="red">藝術性(20%)</font>+增值性(25%)+作者作品數量分級(15%)' });
        //    $('#Valuability').tooltip({ 'trigger': 'focus hover', html: true, template: tooltiptemplate, 'title': '作品等級=市場性(30%)+包裹性(10%)+藝術性(20%)+<font color="red">增值性(25%)</font>+作者作品數量分級(15%)' });
        //    $('#WorkRating').tooltip({ 'trigger': 'focus hover', html: true, template: tooltiptemplate, 'title': '<font color="red">作品等級</font>=市場性(30%)+包裹性(10%)+藝術性(20%)+增值性(25%)+作者作品數量分級(15%)' });
        //});

        $('#AuthorsEnName').attr('disabled', 'disabled');
        $("#AuthorsNation").attr('disabled', 'disabled');
    </script>
}
