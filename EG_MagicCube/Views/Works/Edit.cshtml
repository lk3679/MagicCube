@model EG_MagicCube.Models.WorksModel

@{
    ViewBag.Title = "作品編輯";
}

<h2>作品編輯</h2>

<div class="col-xs-12">
    @Html.ActionLink("編輯圖片 ("+ Model.ImageCount.ToString() + ")", "Edit", "Files", new { id = Model.WorksNo }, new { @class = "btn btn-info" })
    @Html.ActionLink("返回作品列表", "Index", "Works", new { @class = "btn btn-warning pull-right" })
</div>

@using (Html.BeginForm("Edit", "Works", FormMethod.Post, new { enctype = "multipart/form-data", id = "EditForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="nonpadding">
            <div class="col-xs-12">
                作品基本資訊
            </div>
            @Html.LabelFor(model => model.AuthorNo_InputString, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.Hidden("AuthorNo_InputStringHide", string.Join(",", string.Join(",", Model.AuthorNo_InputString ?? new List<string>())))
                @Html.DropDownList("AuthorNo_InputString", (IEnumerable<SelectListItem>)ViewBag.WorksAuthors, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.AuthorNo_InputString, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.WorksName, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.EditorFor(model => model.WorksName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorksName, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.YearStart, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                <div class="col-xs-6">
                    @Html.EditorFor(model => model.YearStart, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                    @Html.ValidationMessageFor(model => model.YearStart, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-6">
                    @Html.EditorFor(model => model.YearEnd, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                    @Html.ValidationMessageFor(model => model.YearEnd, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="col-xs-12">
                作品組件
            </div>
            <div class="well  col-xs-12" style="padding:5px;">
                <div class="col-md-6 col-xs-12">
                    <label class="control-label col-md-2 col-xs-3" for="MaterialsID">材質</label>
                    <div class="col-md-4 col-xs-3">
                        @Html.DropDownList("MaterialsID", (IEnumerable<SelectListItem>)ViewBag.WorksModuleList, new { @class = "js-example-basic-multiple js-states form-control" })
                        <span class="field-validation-valid text-danger" data-valmsg-for="MaterialsID" data-valmsg-replace="true"></span>
                    </div>

                    <label class="control-label col-md-2 col-xs-3" for="height">高</label>
                    <div class="col-md-4 col-xs-3">
                        <input class="form-control text-box single-line" id="height" name="height" type="number" value="">
                        <span class="field-validation-valid text-danger" data-valmsg-for="height" data-valmsg-replace="true"></span>
                    </div>
                </div>
                <div class="col-md-6 col-xs-12">
                    <label class="control-label col-md-2 col-xs-3" for="width">寬</label>
                    <div class="col-md-4 col-xs-3">
                        <input class="form-control text-box single-line" id="width" name="width" type="number" value="">
                        <span class="field-validation-valid text-danger" data-valmsg-for="width" data-valmsg-replace="true"></span>
                    </div>

                    <label class="control-label col-md-2 col-xs-3" for="deep">深</label>
                    <div class="col-md-4 col-xs-3">
                        <input class="form-control text-box single-line" id="deep" name="deep" type="number" value="">
                        <span class="field-validation-valid text-danger" data-valmsg-for="deep" data-valmsg-replace="true"></span>
                    </div>
                </div>
                <div class="col-md-6 col-xs-12">
                    @*<label class="control-label col-md-2 col-xs-3" for="width">長</label>
                    <div class="col-md-4 col-xs-3">
                        <input class="form-control text-box single-line" data-val="true" id="length" name="length" type="number" value="">
                        <span class="field-validation-valid text-danger" data-valmsg-for="length" data-valmsg-replace="true"></span>
                    </div>*@
                    <label class="control-label col-md-2 col-xs-3" for="times">影片長度</label>
                    <div class="col-md-4 col-xs-3">
                        <input class="form-control text-box single-line"
                               id="times" name="times" type="text" value="">
                    </div>
                </div>
                <div class="col-md-4 col-xs-9">
                    <label class="control-label col-md-2 col-xs-4" for="nums">數量單位</label>
                    <div class="col-xs-4">
                        <input class="form-control text-box single-line" id="nums" name="nums" type="number" value="" data-val="true">
                        <span class="field-validation-valid text-danger" data-valmsg-for="nums" data-valmsg-replace="true"></span>
                    </div>
                    <div class="col-xs-4">
                        @Html.DropDownList("CountNoun", (IEnumerable<SelectListItem>)ViewBag.WorksCountNounList, new { @class = "js-example-basic-multiple js-states form-control" })
                        <span class="field-validation-valid text-danger" data-valmsg-for="CountNoun" data-valmsg-replace="true"></span>
                    </div>
                </div>
                <div class="col-md-2 col-xs-3 text-right">
                    <div class="col-xs-12">
                        <input type="button" id="mateadd" name="mateadd" class="btn btn-success" value="加入" />
                    </div>
                </div>
                <label class="text-danger error" style="display:none;">此項目必填</label>
                <div class=" col-xs-12" style="max-height:121px;overflow-y:scroll;">
                    <table class="Moduletable table" id="WorksModuleList" name="WorksModuleList">
                        <thead>
                            <tr>
                                <th hidden="hidden">
                                    材質編號
                                </th>
                                <th>
                                    材質
                                </th>
                                <th>
                                    高
                                </th>
                                <th>
                                    寬
                                </th>
                                <th>
                                    深
                                </th>
                                @*<th>
                                    長
                                </th>*@
                                <th>
                                    影片長度
                                </th>
                                <th hidden="hidden">
                                    單位編號
                                </th>
                                <th>
                                    單位數量
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.WorksModuleList != null)
                            {
                                for (int i = 0; i < Model.WorksModuleList.Count; i++)
                                {
                                    <tr>
                                        <td hidden="hidden">
                                            @Html.HiddenFor(model => model.WorksModuleList[i].Material.MenuID)
                                        </td>
                                        <td>
                                            @Html.HiddenFor(model => model.WorksModuleList[i].Material.MenuName)
                                            @Html.DisplayFor(model => model.WorksModuleList[i].Material.MenuName)
                                        </td>
                                        <td>
                                            @Html.HiddenFor(model => model.WorksModuleList[i].Height)
                                            @Html.DisplayFor(model => model.WorksModuleList[i].Height)
                                        </td>
                                        <td>
                                            @Html.HiddenFor(model => model.WorksModuleList[i].Width)
                                            @Html.DisplayFor(model => model.WorksModuleList[i].Width)
                                        </td>
                                        <td>
                                            @Html.HiddenFor(model => model.WorksModuleList[i].Deep)
                                            @Html.DisplayFor(model => model.WorksModuleList[i].Deep)
                                        </td>
                                        @*<td>
                                            @Html.HiddenFor(model => model.WorksModuleList[i].Length)
                                            @Html.DisplayFor(model => model.WorksModuleList[i].Length)
                                        </td>*@
                                        <td>
                                            @Html.HiddenFor(model => model.WorksModuleList[i].TimeLength)
                                            @Html.DisplayFor(model => model.WorksModuleList[i].TimeLength)
                                        </td>
                                        <td>
                                            @Html.HiddenFor(model => model.WorksModuleList[i].Amount)
                                            @Html.HiddenFor(model => model.WorksModuleList[i].CountNoun.MenuName)
                                            @Html.DisplayFor(model => model.WorksModuleList[i].Amount) @Html.DisplayFor(model => model.WorksModuleList[i].CountNoun.MenuName)
                                        </td>
                                        <td><i class="fa fa-times fa-4" aria-hidden="true"></i></td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", rows = 1 })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.OwnerNo_InputString, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.Hidden("OwnerNo_InputStringHide", string.Join(",", string.Join(",", Model.OwnerNo_InputString ?? new List<string>())))
                @Html.DropDownList("OwnerNo_InputString", (IEnumerable<SelectListItem>)ViewBag.WorksPropOwnerList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.OwnerNo_InputString, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.WareTypeNo_InputString, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.Hidden("WareTypeNo_InputStringHide", string.Join(",", string.Join(",", Model.WareTypeNo_InputString ?? new List<string>())))
                @Html.DropDownList("WareTypeNo_InputString", (IEnumerable<SelectListItem>)ViewBag.WorksPropWareTypeList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.WareTypeNo_InputString, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-3" style="margin-bottom:0;">
                <span class="numberprice">
                    <input type="text" class="form-control text-box single-line" />
                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                </span>
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })

            </div>

            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-3" style="margin-bottom:0;">
                <span class="numberprice">
                    <input type="text" class="form-control text-box single-line" />
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                </span>
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })

            </div>

            @Html.LabelFor(model => model.PricingDate, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9" >
                @Html.EditorFor(model => model.PricingDate, new { htmlAttributes = new { @class = "form-control", type = "date", Value = Model.PricingDate.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(model => model.PricingDate, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.GrossMargin, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.EditorFor(model => model.GrossMargin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GrossMargin, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.GenreNo_InputString, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.Hidden("GenreNo_InputStringHide", string.Join(",", string.Join(",", Model.GenreNo_InputString ?? new List<string>())))
                @Html.DropDownList("GenreNo_InputString", (IEnumerable<SelectListItem>)ViewBag.WorksPropGenreList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.GenreNo_InputString, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.StyleNo_InputString, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.Hidden("StyleNo_InputStringHide", string.Join(",", string.Join(",", Model.StyleNo_InputString ?? new List<string>())))
                @Html.DropDownList("StyleNo_InputString", (IEnumerable<SelectListItem>)ViewBag.WorksPropStyleList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.StyleNo_InputString, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6 col-xs-12">
                @Html.LabelFor(model => model.Marketability, htmlAttributes: new { @class = "control-label col-md-2 col-xs-3" })
                <div class="col-md-4 col-xs-3">
                    @Html.EditorFor(model => model.Marketability, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Marketability, "", new { @class = "text-danger", @min = "0", @max = "10", @data_toggle = "tooltip", @data_html = "true", @title = "作品等級=<red>市場性(30%)</red>+包裹性(10%)+藝術性(20%)+增值性(25%)+作者數量等級(15%)" })
                </div>

                @Html.LabelFor(model => model.Packageability, htmlAttributes: new { @class = "control-label col-md-2 col-xs-3" })
                <div class="col-md-4 col-xs-3">
                    @Html.EditorFor(model => model.Packageability, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Packageability, "", new { @class = "text-danger", @min = "0", @max = "10", @data_toggle = "tooltip", @data_html = "true", @title = "作品等級=市場性(30%)+<red>包裹性(10%)</red>+增值性(25%)+藝術性(20%)+作者數量等級(15%)" })
                </div>
            </div>
            <div class="col-md-6 col-xs-12">
                @Html.LabelFor(model => model.Valuability, htmlAttributes: new { @class = "control-label col-md-2 col-xs-3" })
                <div class="col-md-4 col-xs-3">
                    @Html.EditorFor(model => model.Valuability, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Valuability, "", new { @class = "text-danger", @min = "0", @max = "10", @data_toggle = "tooltip", @data_html = "true", @title = "作品等級=市場性(30%)+包裹性(10%)+<red>增值性(25%)</red>+藝術性(20%)+作者數量等級(15%)" })
                </div>

                @Html.LabelFor(model => model.Artisticability, htmlAttributes: new { @class = "control-label  col-md-2 col-xs-3" })
                <div class="col-md-4 col-xs-3">
                    @Html.EditorFor(model => model.Artisticability, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Artisticability, "", new { @class = "text-danger", @min = "0", @max = "10", @data_toggle = "tooltip", @data_html = "true", @title = "作品等級=市場性(30%)+包裹性(10%)+增值性(25%)+<red>藝術性(20%)</red>+作者數量等級(15%)" })
                </div>
            </div>
            <div class="col-md-3 col-sm-6 col-xs-12">
                @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-4 col-sm-6 col-xs-3" })
                <label class="control-label col-md-4 col-sm-6 col-xs-3" id="WorkRating" style="text-align:center;">@Model.Rating</label >
            </div>
            <div class="col-md-3 col-sm-12 col-xs-12" style="vertical-align: middle;line-height: 35px;">
                @*@Html.LabelFor(model => model.UploadWorksFiles, htmlAttributes: new { @class = "control-label col-md-4 col-xs-6" })*@
                <a href="@Url.Action("Edit", "Files", new { id = Model.WorksNo})" class="col-md-6 col-sm-4 col-xs-4">作品圖片 (@Model.ImageCount.ToString())</a>
                @*@Html.ActionLink("作品圖片 (" + Model.ImageCount.ToString() + ")", "Edit", "Files", new { id = Model.WorksNo }, new { @class = "col-md-5 col-xs-8" })*@
                    <div class="col-md-5 col-sm-6 col-xs-3">
                        <span class="btn btn-success fileinput-button">
                            <i class="glyphicon glyphicon-plus"></i>
                            <span id="filespan">上傳...</span>
                            <input type="file" name="Img" multiple accept="image/*" />
                            @*<img id="imgPreview" style="max-width: 150px;" />*@
                        </span>
                    </div>
</div>
            <div class="col-xs-6 pull-right text-right">
                <input type="submit" value="儲存" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/numberprice.js")"></script>
    <script>
        $.when($(".js-example-basic-multiple").select2({ width: '100%' })).then(function () {
            var oAuthorNo = $('#AuthorNo_InputStringHide').val().split(',');
            for (var i = 0; i < oAuthorNo.length; i++) {
                $('#AuthorNo_InputString  option[value="' + oAuthorNo[i] + '"]').attr('selected', 'selected');
            }
            $("#AuthorNo_InputString").trigger("change");

            var oOwnerNo = $('#OwnerNo_InputStringHide').val().split(',');
            for (var i = 0; i < oOwnerNo.length; i++) {
                $('#OwnerNo_InputString  option[value="' + oOwnerNo[i] + '"]').attr('selected', 'selected');
            }
            $("#OwnerNo_InputString").trigger("change");

            var oWareTypeNo = $('#WareTypeNo_InputStringHide').val().split(',');
            for (var i = 0; i < oWareTypeNo.length; i++) {
                $('#WareTypeNo_InputString  option[value="' + oWareTypeNo[i] + '"]').attr('selected', 'selected');
            }
            $("#WareTypeNo_InputString").trigger("change");

            var oGenreNo = $('#GenreNo_InputStringHide').val().split(',');
            for (var i = 0; i < oGenreNo.length; i++) {
                $('#GenreNo_InputString  option[value="' + oGenreNo[i] + '"]').attr('selected', 'selected');
            }
            $("#GenreNo_InputString").trigger("change");

            var oStyleNo = $('#StyleNo_InputStringHide').val().split(',');
            for (var i = 0; i < oStyleNo.length; i++) {
                $('#StyleNo_InputString  option[value="' + oStyleNo[i] + '"]').attr('selected', 'selected');
            }
            $("#StyleNo_InputString").trigger("change");
        });

        function CheckData() {
            var obj = {};
            if ($('input#height').val() == "") {
                obj["height"] = "此項目必填";
            }
            if ($('input#width').val() == "") {
                obj["width"] = "此項目必填";
            }
            if ($('input#deep').val() == "") {
                obj["deep"] = "此項目必填";
            }
            //if ($('input#length').val() == "") {
            //    obj["length"] = "此項目必填";
            //}
            if ($('input#nums').val() == "") {
                obj["nums"] = "此項目必填";
            }
            if (!jQuery.isEmptyObject(obj)) {
                $("#EditForm").validate().showErrors(obj)
                return true;
            }
            return false;
        }

        $('#mateadd').click(function () {
            if (CheckData()) {
                return;
            }
            $('label.error:visible').hide();
            var index = $('.Moduletable tr').length - 1;
            $('.Moduletable tr:last').after('<tr>< td hidden= "hidden" > <input type="hidden" name="WorksModuleList[' + index + '].Material.MenuID" value="' + $('#MaterialsID').val() + '"></input></td>' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Material.MenuName" value="' + $('#select2-MaterialsID-container').html() + '"></input>' + $('#select2-MaterialsID-container').html() + '</td>' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Height" value="' + $('#height').val() + '"></input>' + $('#height').val() + '</td>' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Width" value="' + $('#width').val() + '"></input>' + $('#width').val() + '</td > ' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Deep" value="' + $('#deep').val() + '"></input>' + $('#deep').val() + '</td > ' +
                //'<td><input type="hidden" name="WorksModuleList[' + index + '].Length" value="' + $('#length').val() + '"></input>' + $('#length').val() + '</td > ' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].TimeLength" value="' + $('#times').val() + '"></input>' + $('#times').val() + '</td > ' +
                '<td hidden= "hidden" > <input type="hidden" name="WorksModuleList[' + index + '].CountNoun.MenuID" value="' + $('#CountNoun').val() + '"></input>' + $('#CountNoun').val() + '</td>' +
                '<td><input type="hidden" name="WorksModuleList[' + index + '].Amount" value="' + $('#nums').val() + '"></input>' +
                '<input type="hidden" name="WorksModuleList[' + index + '].CountNoun.MenuName" value="' + $('#select2-CountNoun-container').html() + '"></input>' +
                $('#nums').val() + $('#select2-CountNoun-container').html() + '</td> <td><i class="fa fa-times fa-4" aria-hidden="true"></i></td></tr >');

        });
        $(document).on('click', 'i.fa', function () {
            var p = $(this).parent().parent();
            $(p).hide();
            $(p).find('input').attr('value', '-1');
        }).on('change', 'input#YearStart', function () {
            var s = +$('input#YearStart').val();
            if (s != "") {
                var e = +$('input#YearEnd').val();
                if (e == "" || s >= e) {
                    $('input#YearEnd').val(s);
                }
            }
        });
        $("form").submit(function (e) {
            $('label.error').hide();
            if ($('#WorksModuleList tr:visible').length == 1) {
                $('label.error').show();
                return false;
            }

        });
        $('input[type=file]').change(function () {
            var l = this.files.length;
            if (l > 0) { $('span#filespan').html("已選 " + l + " 個檔案"); }
            else { $('span#filespan').html("上傳..."); }
        });
        $("#Marketability,#Packageability,#Valuability,#Artisticability").change(function () {
            var m = 0.0;
            var p = 0.0;
            var v = 0.0;
            var a = 0.0;
            m = (isNaN($("#Marketability").val())) == true ? 0.0 :parseFloat($("#Marketability").val())*0.3;
            p = (isNaN($("#Packageability").val())) == true ? 0.0 :parseFloat($("#Packageability").val())*0.1;
            v = (isNaN($("#Valuability").val())) == true ? 0.0 :parseFloat($("#Valuability").val()) * 0.25;
            a = (isNaN($("#Artisticability").val())) == true ? 0.0 :parseFloat($("#Artisticability").val()) * 0.2;
            var r = (m + p + v + a) / 2.0;
            var r2 = (m + p + v + a) % 2.0;
            if (r2 > 0.0)
            {
                r = r + 1;
            }
            
            $("#WorkRating").text(isNaN((parseInt(r)) == true ? 0 : (parseInt(r))).toString());
        });
        $('form').on('focus', 'input[type=number]', function (e) {
            $(this).on('mousewheel.disableScroll', function (e) {
                e.preventDefault()
            })
        })
        $('form').on('blur', 'input[type=number]', function (e) {
            $(this).off('mousewheel.disableScroll')
        })
        var tooltiptemplate ='<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner" style="background-color:white;color:black;border: 1px solid #ccc;border-radius: 4px;background-color: #f5f5f5;"></div></div>'
        $(document).ready(function () {
            $('#Marketability').tooltip({ 'trigger': 'focus hover', html: true, template: tooltiptemplate, 'title': '作品等級=<font color="red">市場性(30%)</font>+包裹性(10%)+藝術性(20%)+增值性(25%)+作者作品數量分級(15%)' });
            $('#Packageability').tooltip({ 'trigger': 'focus hover', html: true, template: tooltiptemplate, 'title': '作品等級=市場性(30%)+<font color="red">包裹性(10%)</font>+藝術性(20%)+增值性(25%)+作者作品數量分級(15%)' });
            $('#Artisticability').tooltip({ 'trigger': 'focus hover', html: true, template: tooltiptemplate, 'title': '作品等級=市場性(30%)+包裹性(10%)+<font color="red">藝術性(20%)</font>+增值性(25%)+作者作品數量分級(15%)' });
            $('#Valuability').tooltip({ 'trigger': 'focus hover', html: true, template: tooltiptemplate, 'title': '作品等級=市場性(30%)+包裹性(10%)+藝術性(20%)+<font color="red">增值性(25%)</font>+作者作品數量分級(15%)' });
            $('#WorkRating').tooltip({ 'trigger': 'focus hover', html: true, template: tooltiptemplate, 'title': '<font color="red">作品等級</font>=市場性(30%)+包裹性(10%)+藝術性(20%)+增值性(25%)+作者作品數量分級(15%)' });
        });
    </script>
}
