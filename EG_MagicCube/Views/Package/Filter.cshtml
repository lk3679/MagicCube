@model EG_MagicCube.Models.ViewModel.AdSearchViewModel

@{
    ViewBag.Title = "作品篩選";
}

<h2>作品篩選</h2>

<div class="col-xs-12" style="margin-bottom: 15px; padding-right: 0;">
    @Html.ActionLink("返回包裝列表", "Index", "Package", new { @class = "btn btn-warning pull-right" })
</div>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <div class="nonpadding">
            @Html.LabelFor(model => model.Budget, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9" style="margin-bottom:0;">
                <span class="numberprice">
                    <input type="text" class="form-control text-box single-line" />
                    @Html.EditorFor(model => model.Budget, new { htmlAttributes = new { @class = "form-control" } })
                </span>
            </div>

            @Html.LabelFor(model => model.AuthorNoList, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3 " })
            <div class="col-md-3 col-xs-9">
                @Html.Hidden("AuthorNo_InputStringHide", string.Join(",", string.Join(",", Model.AuthorNoList ?? new List<string>())))
                @Html.DropDownListFor(model => model.AuthorNoList, (IEnumerable<SelectListItem>)ViewBag.Authors, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
            </div>

            @Html.LabelFor(model => model.WorksName, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.EditorFor(model => model.WorksName, new { htmlAttributes = new { @class = "form-control" } })
            </div>



            @Html.LabelFor(model => model.MineLength, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3 " })
            <div class="col-md-3 col-xs-9">
                <div class="col-xs-6">
                    @Html.EditorFor(model => model.MineLength, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-xs-6">
                    @Html.EditorFor(model => model.MaxLength, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.MineWidth, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3 " })
            <div class="col-md-3 col-xs-9">
                <div class="col-xs-6">
                    @Html.EditorFor(model => model.MineWidth, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-xs-6">
                    @Html.EditorFor(model => model.MaxWidth, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.MineHeight, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3 " })
            <div class="col-md-3 col-xs-9">
                <div class="col-xs-6">
                    @Html.EditorFor(model => model.MineHeight, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-xs-6">
                    @Html.EditorFor(model => model.MaxHeight, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.MineDeep, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3 " })
            <div class="col-md-3 col-xs-9">
                <div class="col-xs-6">
                    @Html.EditorFor(model => model.MineDeep, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-xs-6">
                    @Html.EditorFor(model => model.MaxDeep, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.MineTimeLength, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                <div class="col-xs-6">
                    @Html.EditorFor(model => model.MineTimeLength, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-xs-6">
                    @Html.EditorFor(model => model.MaxTimeLength, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.Price_U, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3 " })
            <div class="col-md-3 col-xs-9">
                <div class="col-xs-6">
                    <span class="numberprice">
                        <input type="text" class="form-control text-box single-line" />
                        @Html.EditorFor(model => model.Price_U, new { htmlAttributes = new { @class = "form-control" } })
                    </span>
                </div>
                <div class="col-xs-6">
                    <span class="numberprice">
                        <input type="text" class="form-control text-box single-line" />
                        @Html.EditorFor(model => model.Price_L, new { htmlAttributes = new { @class = "form-control" } })
                    </span>
                </div>
            </div>

            @Html.LabelFor(model => model.GenreNoList, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.Hidden("GenreNo_InputStringHide", string.Join(",", string.Join(",", Model.GenreNoList ?? new List<string>())))
                @Html.DropDownList("GenreNoList", (IEnumerable<SelectListItem>)ViewBag.GenreNoList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
            </div>

            @Html.LabelFor(model => model.StyleNoList, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.Hidden("StyleNo_InputStringHide", string.Join(",", string.Join(",", Model.StyleNoList ?? new List<string>())))
                @Html.DropDownList("StyleNoList", (IEnumerable<SelectListItem>)ViewBag.StyleNoList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
            </div>

            @Html.LabelFor(model => model.GradedNoList, htmlAttributes: new { @class = "control-label col-md-1 col-xs-3" })
            <div class="col-md-3 col-xs-9">
                @Html.Hidden("GradedNo_InputStringHide", string.Join(",", string.Join(",", Model.GradedNoList ?? new List<string>())))
                @Html.DropDownList("GradedNoList", (IEnumerable<SelectListItem>)ViewBag.GradedNoList, new { @class = "js-example-basic-multiple js-states form-control", @multiple = "multiple" })
            </div>

            <div class="col-xs-4 pull-right text-right">
                <input type="submit" value="搜尋" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/numberprice.js")"></script>
    <script>
        $.when($(".js-example-basic-multiple").select2({ width: '100%' })).then(function () {
            var oAuthorNo = $('#AuthorNo_InputStringHide').val().split(',');
            for (var i = 0; i < oAuthorNo.length; i++) {
                $('#AuthorNoList  option[value="' + oAuthorNo[i] + '"]').attr('selected', 'selected');
            }
            $("#AuthorNoList").trigger("change");

            var oGradedNo = $('#GradedNo_InputStringHide').val().split(',');
            for (var i = 0; i < oGradedNo.length; i++) {
                $('#GradedNoList  option[value="' + oGradedNo[i] + '"]').attr('selected', 'selected');
            }
            $("#GradedNoList").trigger("change");

            var oGenreNo = $('#GenreNo_InputStringHide').val().split(',');
            for (var i = 0; i < oGenreNo.length; i++) {
                $('#GenreNoList  option[value="' + oGenreNo[i] + '"]').attr('selected', 'selected');
            }
            $("#GenreNoList").trigger("change");

            var oStyleNo = $('#StyleNo_InputStringHide').val().split(',');
            for (var i = 0; i < oStyleNo.length; i++) {
                $('#StyleNoList  option[value="' + oStyleNo[i] + '"]').attr('selected', 'selected');
            }
            $("#StyleNoList").trigger("change");
        });
    </script>
}
